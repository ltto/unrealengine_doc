{
  "application_families": [
    "unreal_engine"
  ],
  "applications": [
    {
      "id": 3581142,
      "major_version": "5",
      "type": "unreal_engine",
      "version": "5.5"
    }
  ],
  "blocks": [
    {
      "content_html": "\u003ch2\u003eNavigation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API\"\u003eUnreal Engine C++ API Reference\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime\"\u003eRuntime\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MovieScene\"\u003eMovieScene\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MovieScene/EntitySystem\"\u003eEntitySystem\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003e \u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eModule\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MovieScene\"\u003eMovieScene\u003c/a\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eHeader\u003c/td\u003e\n      \u003ctd\u003e/Engine/Source/Runtime/MovieScene/Public/EntitySystem/MovieScenePropertySystemTypes.h\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eInclude\u003c/td\u003e\n      \u003ctd\u003e#include \"EntitySystem/MovieScenePropertySystemTypes.h\"\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSyntax\u003c/h2\u003e\n\n\u003cpre\u003e\u003ccode\u003etemplate\u0026lt;typename PropertyTraits, typename MetaDataType, typename... CompositeTypes\u0026gt;  \nstruct TSetCompositePropertyValuesImpl  \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eRemarks\u003c/h2\u003e\n\n\u003cp\u003eTask implementation that combines a specific set of input components (templated as CompositeTypes) through a projection, and applies the result to an object property Three types of property are supported: Custom native accessor functions, fast pointer offset, or \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MovieScene/FTrackInstancePropertyBindings\"\u003eFTrackInstancePropertyBindings\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCan be invoked in one of 2 ways: either with a specific property type and input components through a per-entity iteration: TComponentTypeID\u003cFCustomPropertyIndex\u003e CustomProperty = ...;\nTComponentTypeID\u003cUObject*\u003e BoundObject = ...;\u003c/p\u003e\n\n\u003cp\u003eFEntityTaskBuilder()\n.Read( BoundObject )\n.Read( CustomProperty )\n.Read( TComponentTypeID\u003cfloat\u003e(...) )\n.Read( TComponentTypeID\u003cfloat\u003e(...) )\n.Read( TComponentTypeID\u003cfloat\u003e(...) )\n.Dispatch_PerEntity\u003cTSetCompositePropertyValues\u003cFVector, float, float, float\u003e\u003e( ..., \u0026UKismetMathLibrary::MakeVector );\u003c/p\u003e\n\n\u003cp\u003eOr via a combinatorial task that iterates all entities with any one of the property components: TComponentTypeID\u003cuint16\u003e FastPropertyOffset = ...;\nTComponentTypeID\u003cTSharedPtr\u003cFTrackInstancePropertyBindings\u003e\u003e SlowProperty = ...;\u003c/p\u003e\n\n\u003cp\u003eFEntityTaskBuilder()\n.Read(      BoundObject )\n.ReadOneOf( CustomProperty, FastPropertyOffset, SlowProperty )\n.Read(      TComponentTypeID\u003cfloat\u003e(...) )\n.Read(      TComponentTypeID\u003cfloat\u003e(...) )\n.Read(      TComponentTypeID\u003cfloat\u003e(...) )\n.Dispatch_Perllocation\u003cTSetCompositePropertyValues\u003cFVector, float, float, float\u003e\u003e( ..., \u0026UKismetMathLibrary::MakeVector );\u003c/p\u003e\n",
      "settings": {
        "is_hidden": false
      },
      "type": "markdown"
    }
  ],
  "description": "Task implementation that combines a specific set of input components (templated as CompositeTypes) through a projection, and applies the result to an object property Three types of property are supported: Custom native accessor functions, fast pointer offset, or [FTrackInstancePropertyBindings](API\\Runtime\\MovieScene\\FTrackInstancePropertyBindings).",
  "document_type": null,
  "hash_id": "ExxzY",
  "id": 3660388,
  "locale": "en-us",
  "prereq_documents": [],
  "readiness": "production",
  "related_documents": [],
  "revision_hash_id": "AAQBV",
  "seo_description": null,
  "seo_slug": null,
  "seo_title": null,
  "slug": "API/Runtime/MovieScene/EntitySystem/TSetCompositePropertyValuesImpl",
  "source": "ue_cpp_api_external",
  "tags": [],
  "title": "TSetCompositePropertyValuesImpl",
  "updated_at": "2024-11-14T00:50:16.621+00:00",
  "views_count": 1
}