{
  "application_families": [
    "unreal_engine"
  ],
  "applications": [
    {
      "id": 3581142,
      "major_version": "5",
      "type": "unreal_engine",
      "version": "5.5"
    }
  ],
  "blocks": [
    {
      "content_html": "\u003ch2\u003eNavigation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API\"\u003eUnreal Engine C++ API Reference\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime\"\u003eRuntime\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MeshDescription\"\u003eMeshDescription\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003e \u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eModule\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MeshDescription\"\u003eMeshDescription\u003c/a\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eHeader\u003c/td\u003e\n      \u003ctd\u003e/Engine/Source/Runtime/MeshDescription/Public/MeshAttributeArray.h\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eInclude\u003c/td\u003e\n      \u003ctd\u003e#include \"MeshAttributeArray.h\"\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSyntax\u003c/h2\u003e\n\n\u003cpre\u003e\u003ccode\u003etemplate\u0026lt;typename FnType, uint32 Size\u0026gt;  \nstruct TJumpTable  \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eRemarks\u003c/h2\u003e\n\n\u003cp\u003eWe need a mechanism by which we can iterate all items in the attribute map and perform an arbitrary operation on each. We require polymorphic behavior, as attribute arrays are templated on their attribute type, and derived from a generic base class. However, we cannot have a virtual templated method, so we use a different approach.\u003c/p\u003e\n\n\u003cp\u003eEffectively, we wish to cast the attribute array depending on the type member of the base class as we iterate through the map. This might look something like this:\u003c/p\u003e\n\n\u003cp\u003etemplate \u003ctypename FuncType\u003e void ForEach(FuncType Func) { for (const auto\u0026 MapEntry : Map) { const uint32 Type = MapEntry.Value-\u003eGetType(); switch (Type) { case 0: Func(static_cast\u003cTMeshAttributeArraySet\u003cFVector3f\u003e\u003cem\u003e\u003e(MapEntry.Value.Get()); break; case 1: Func(static_cast\u003cTMeshAttributeArraySet\u003cFVector4f\u003e\u003c/em\u003e\u003e(MapEntry.Value.Get()); break; case 2: Func(static_cast\u003cTMeshAttributeArraySet\u003cFVector2f\u003e\u003cem\u003e\u003e(MapEntry.Value.Get()); break; case 3: Func(static_cast\u003cTMeshAttributeArraySet\u003cfloat\u003e\u003c/em\u003e\u003e(MapEntry.Value.Get()); break; .... } } }\u003c/p\u003e\n\n\u003cp\u003e(The hope is that the compiler would optimize the switch into a jump table so we get O(1) dispatch even as the number of attribute types increases.)\u003c/p\u003e\n\n\u003cp\u003eThe approach taken here is to generate a jump table at compile time, one entry per possible attribute type. The function Dispatch(...) is the actual function which gets called. MakeJumpTable() is the constexpr function which creates a static jump table at compile time. Class which implements a function jump table to be automatically generated at compile time. This is used by \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MeshDescription/TAttributesSet\"\u003eTAttributesSet\u003c/a\u003e to provide O(1) dispatch by attribute type at runtime.\u003c/p\u003e\n\n\u003ch2\u003eVariables\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/fa75f7fc-873a-4a7f-9bca-6d35171cf0c9/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003eFnType *[Size]\u003c/td\u003e\n      \u003ctd\u003eFns\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eConstructors\u003c/h2\u003e\n\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/3f9101d7-6055-484c-ade4-933592d90849/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003econstexpr\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/MeshDescription/TJumpTable/__ctor\"\u003eTJumpTable\u003c/a\u003e\n (\nT... Ts\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n",
      "settings": {
        "is_hidden": false
      },
      "type": "markdown"
    }
  ],
  "description": "We need a mechanism by which we can iterate all items in the attribute map and perform an arbitrary operation on each.",
  "document_type": null,
  "hash_id": "2klJv",
  "id": 3656526,
  "locale": "en-us",
  "prereq_documents": [],
  "readiness": "production",
  "related_documents": [],
  "revision_hash_id": "q8qap",
  "seo_description": null,
  "seo_slug": null,
  "seo_title": null,
  "slug": "API/Runtime/MeshDescription/TJumpTable",
  "source": "ue_cpp_api_external",
  "tags": [],
  "title": "TJumpTable",
  "updated_at": "2024-11-14T00:35:25.788+00:00",
  "views_count": 0
}