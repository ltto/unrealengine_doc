{
  "application_families": [
    "unreal_engine"
  ],
  "applications": [
    {
      "id": 3581142,
      "major_version": "5",
      "type": "unreal_engine",
      "version": "5.5"
    }
  ],
  "blocks": [
    {
      "content_html": "\u003ch2\u003eNavigation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API\"\u003eUnreal Engine C++ API Reference\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime\"\u003eRuntime\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing\"\u003eSignalProcessing\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing/DSP\"\u003eDSP\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003e \u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eModule\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing\"\u003eSignalProcessing\u003c/a\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eHeader\u003c/td\u003e\n      \u003ctd\u003e/Engine/Source/Runtime/SignalProcessing/Public/DSP/VectorLinearResampler.h\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eInclude\u003c/td\u003e\n      \u003ctd\u003e#include \"DSP/VectorLinearResampler.h\"\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSyntax\u003c/h2\u003e\n\n\u003cpre\u003e\u003ccode\u003estruct FVectorLinearResampler  \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eRemarks\u003c/h2\u003e\n\n\u003cp\u003eFVectorLinearResampler\u003c/p\u003e\n\n\u003cp\u003ePerforms a basic linear resampling using SIMD for optimization.\u003c/p\u003e\n\n\u003cp\u003eAdvancing is done in fixed point - 65536 is a 1.0f sample rate.\u003c/p\u003e\n\n\u003cp\u003eStereo requires a deinterleaved format.\u003c/p\u003e\n\n\u003cp\u003eThe design is based on a \"pull\" model, assuming you need to fill a buffer from a source,\n    rather than computing how much output you would need to resample a given input. If you need\n    to do that, just run the resampler in chunks until you drain the input, appending to the\n    output as you go.\u003c/p\u003e\n\n\u003cp\u003eUsage:\n        FVectorLinearResample Resampler = {};\u003c/p\u003e\n\n\u003cp\u003euint32 FixedSampleRate = (uint32)(1.0f * 65536);\u003c/p\u003e\n\n\u003cp\u003e/ the example source buffer is assumed to be stereo deinterleaved with the / right channel directly after the left. float* SourceFrames = 0;//\u003cdata from elsewhere\u003e; uint32 SourceBufferFrameCount = 0;//\u003c# of frames - i.e.len(SourceFrames) / (sizeof(float) * 2) since stereo\u003e; uint32 SourceBufferFloatsToRightChannel = SourceBufferFrameCount; // right channel directly after the left\u003c/p\u003e\n\n\u003cp\u003econst uint32 OutputChunkFrames = 512; while (SourceBufferFrameCount) { / stereo output chunk. Or pointer to wherever you're mixing to. float OutputFrames[OutputChunkFrames * 2];\u003c/p\u003e\n\n\u003cp\u003e/ find out how much input we need for the resampler to be able to generate / our chunk. uint32 SourceFramesNeeded = Resampler.SourceFramesNeeded(OutputChunkFrames, FixedSampleRate);\u003c/p\u003e\n\n\u003cp\u003e/ make sure we have that available. if (SourceFramesNeeded \u003c= SourceBufferFrameCount) { / direct resample uint32 SourceFramesConsumed = Resampler.ResampleStereo(OutputChunkFrames, FixedSampleRate,\n                        SourceFrames, SourceBufferFloatsToRightChannel,\n                        OutputFrames, OutputChunkFrames);\u003c/p\u003e\n\n\u003cp\u003edo something with output_frames\u003c/p\u003e\n\n\u003cp\u003e/ advance the input SourceFrames += SourceFramesConsumed; SourceBufferFrameCount -= SourceFramesConsumed; continue; }\u003c/p\u003e\n\n\u003cp\u003e/ here we need to append zeroes as we don't have enough input to fill. / usually need a temp buffer unless you can make dramatic assumptions about / your source buffer. float* TempSource = FMemory::Malloc(sizeof(float) * 2 * SourceFramesNeeded); float* TempSourceLeft = TempSource; float* TempSourceRight = TempSource + SourceFramesNeeded;\u003c/p\u003e\n\n\u003cp\u003euint32 ZeroedFramesNeeded = SourceFramesNeeded - SourceBufferFrameCount;\u003c/p\u003e\n\n\u003cp\u003e/ left\n FMemory::Memcpy(TempSourceLeft, SourceFrames, SourceBufferFrameCount * sizeof(float));\u003c/p\u003e\n\n\u003cp\u003e/ left tail \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/FMemory/Memset/2\"\u003eFMemory::Memset\u003c/a\u003e(TempSourceLeft + SourceBufferFrameCount, 0, ZeroedFramesNeeded * sizeof(float));\u003c/p\u003e\n\n\u003cp\u003e/ right \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/FMemory/Memcpy/2\"\u003eFMemory::Memcpy\u003c/a\u003e(TempSourceRight, SourceFrames + SourceBufferFloatsToRightChannel, SourceBufferFrameCount * sizeof(float));\u003c/p\u003e\n\n\u003cp\u003e/ right tail \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/FMemory/Memset/2\"\u003eFMemory::Memset\u003c/a\u003e(TempSourceRight + SourceBufferFrameCount, 0, ZeroedFramesNeeded * sizeof(float));\u003c/p\u003e\n\n\u003cp\u003eResampler.ResampleStereo(OutputChunkFrames, FixedSampleRate,\n                    TempSource, SourceFramesNeeded,\n                    OutputFrames, OutputChunkFrames);\u003c/p\u003e\n\n\u003cp\u003eFMemory::Free(TempSource);\u003c/p\u003e\n\n\u003cp\u003eSourceBufferFrameCount = 0; }\u003c/p\u003e\n\n\u003ch2\u003eVariables\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/89908267-ca98-4dfb-8bb4-7733a9cd5b40/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eCurrentFrameFraction\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eFunctions\u003c/h2\u003e\n\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/c8766586-3441-4c4a-a835-ef2df43eeef1/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing/DSP/FVectorLinearResampler/ResampleMono\"\u003eResampleMono\u003c/a\u003e\n (\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e OutputFramesNeeded,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e FixedPointSampleRate,\u003cbr\u003e\nfloat const* SourceFrames,\u003cbr\u003e\nfloat* OutputFrames\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eGenerate OutputFramesNeeded resampled output at the given fixed point sample rate (1.0 = 65536).\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/c65d6669-ea4f-4aa7-bdcb-c22e06528d41/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing/DSP/FVectorLinearResampler/ResampleStereo\"\u003eResampleStereo\u003c/a\u003e\n (\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e OutputFramesNeeded,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e FixedPointSampleRate,\u003cbr\u003e\nfloat const* SourceFrames,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e SourceFramesStrideFloats,\u003cbr\u003e\nfloat* OutputFrames,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e OutputFramesStrideFloats\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/7a25bcdd-d820-4d17-92c5-c3e8bd74919f/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/SignalProcessing/DSP/FVectorLinearResampler/SourceFramesNeeded\"\u003eSourceFramesNeeded\u003c/a\u003e\n (\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e OutputFramesNeeded,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint32\"\u003euint32\u003c/a\u003e FixedPointSampleRate\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eReturns the number of source frames necessary to generate the requested output count at the given fixed point sample rate (1.0 rate is 65536)\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n",
      "settings": {
        "is_hidden": false
      },
      "type": "markdown"
    }
  ],
  "description": "FVectorLinearResampler",
  "document_type": null,
  "hash_id": "6lwz0",
  "id": 3686403,
  "locale": "en-us",
  "prereq_documents": [],
  "readiness": "production",
  "related_documents": [],
  "revision_hash_id": "LPDvq",
  "seo_description": null,
  "seo_slug": null,
  "seo_title": null,
  "slug": "API/Runtime/SignalProcessing/DSP/FVectorLinearResampler",
  "source": "ue_cpp_api_external",
  "tags": [],
  "title": "FVectorLinearResampler",
  "updated_at": "2024-11-14T02:22:49.646+00:00",
  "views_count": 3
}