{
  "application_families": [
    "unreal_engine"
  ],
  "applications": [
    {
      "id": 3581142,
      "major_version": "5",
      "type": "unreal_engine",
      "version": "5.5"
    }
  ],
  "blocks": [
    {
      "content_html": "\u003ch2\u003eNavigation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API\"\u003eUnreal Engine C++ API Reference\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime\"\u003eRuntime\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core\"\u003eCore\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates\"\u003eTemplates\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003e \u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eModule\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core\"\u003eCore\u003c/a\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eHeader\u003c/td\u003e\n      \u003ctd\u003e/Engine/Source/Runtime/Core/Public/Templates/EnableIf.h\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eInclude\u003c/td\u003e\n      \u003ctd\u003e#include \"Templates/EnableIf.h\"\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSyntax\u003c/h2\u003e\n\n\u003cpre\u003e\u003ccode\u003etemplate\u0026lt;bool Predicate, typename Func\u0026gt;  \nclass TLazyEnableIf  \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eRemarks\u003c/h2\u003e\n\n\u003cp\u003eThis is a variant of the above that will determine the return type 'lazily', i.e. only if the function is enabled. This is useful when the return type isn't necessarily legal code unless the enabling condition is true.\u003c/p\u003e\n\n\u003cp\u003e// This function will only be instantiated if SomeTrait\u003cT\u003e::Value is true for a particular T. // The function's return type is typename Transform\u003cT\u003e::Type. template \u003ctypename T\u003e typename \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates/TLazyEnableIf\"\u003eTLazyEnableIf\u003c/a\u003e\u003cSomeTrait\u003cT\u003e::Value, Transform\u003cT\u003e\u003e::Type \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/EName\"\u003eFunction(const T\u0026 Obj)\u003c/a\u003e { ... }\u003c/p\u003e\n\n\u003cp\u003eSee boost::lazy_enable_if for more details.\u003c/p\u003e\n\n\u003ch2\u003eSpecializations\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates/TLazyEnableIf_false_Func\"\u003eTLazyEnableIf\u003c false, Func \u003e\u003c/a\u003e\u003cbr /\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates/TLazyEnableIf_true_Func\"\u003eTLazyEnableIf\u003c true, Func \u003e\u003c/a\u003e\u003c/p\u003e\n",
      "settings": {
        "is_hidden": false
      },
      "type": "markdown"
    }
  ],
  "description": "This is a variant of the above that will determine the return type 'lazily', i.e. only if the function is enabled.",
  "document_type": null,
  "hash_id": "W1pOB",
  "id": 3556102,
  "locale": "en-us",
  "prereq_documents": [],
  "readiness": "production",
  "related_documents": [],
  "revision_hash_id": "L59Pk",
  "seo_description": null,
  "seo_slug": null,
  "seo_title": null,
  "slug": "API/Runtime/Core/Templates/TLazyEnableIf",
  "source": "ue_cpp_api_external",
  "tags": [],
  "title": "TLazyEnableIf",
  "updated_at": "2024-11-13T17:42:29.749+00:00",
  "views_count": 1
}