{
  "application_families": [
    "unreal_engine"
  ],
  "applications": [
    {
      "id": 3581142,
      "major_version": "5",
      "type": "unreal_engine",
      "version": "5.5"
    }
  ],
  "blocks": [
    {
      "content_html": "\u003ch2\u003eNavigation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API\"\u003eUnreal Engine C++ API Reference\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins\"\u003ePlugins\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh\"\u003eDynamicMesh\u003c/a\u003e \u003e \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations\"\u003eOperations\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003e \u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eModule\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh\"\u003eDynamicMesh\u003c/a\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eHeader\u003c/td\u003e\n      \u003ctd\u003e/Engine/Plugins/Runtime/GeometryProcessing/Source/DynamicMesh/Public/Operations/TransferBoneWeights.h\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eInclude\u003c/td\u003e\n      \u003ctd\u003e#include \"Operations/TransferBoneWeights.h\"\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eSyntax\u003c/h2\u003e\n\n\u003cpre\u003e\u003ccode\u003eclass FTransferBoneWeights  \n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eRemarks\u003c/h2\u003e\n\n\u003cp\u003eTransfer bone weights from one mesh (source) to another (target). Uses the dynamic mesh bone attributes to reindex the bone indices of the transferred weights from the source to the target skeletons. If both meshes have identical bone name attributes, then reindexing is skipped.\u003c/p\u003e\n\n\u003cp\u003eDuring the reindexing, if a weighted bone in the source skeleton is not present in the target skeleton, then the weight is not transferred (skipped), and an error is printed to the console. For best results, the target skeleton should be a superset of all the bones that are indexed by the transferred weights.\u003c/p\u003e\n\n\u003cp\u003eExample usage:\u003c/p\u003e\n\n\u003cp\u003eFDynamicMesh SourceMesh = ...; // Mesh we transferring weights from. Must have bone attributes. FDynamicMesh TargetMesh = ...; // Mesh we are transferring weights to.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights\"\u003eFTransferBoneWeights\u003c/a\u003e TransferBoneWeights(\u0026SourceMesh, FSkeletalMeshAttributes::DefaultSkinWeightProfileName);\u003c/p\u003e\n\n\u003cp\u003e// Optionally, transform the target mesh. This is useful when you want to align the two meshes in world space. TransferBoneWeights.TargetToWorld = ...;\u003c/p\u003e\n\n\u003cp\u003e// When transferring weights from a dynamic mesh with bone attributes to a dynamic mesh without bone attributes, // first copy over the bone attributes from the source to the target. if (!TargetMesh.HasAttributes() || !TargetMesh.Attributes()-\u003eHasBones()) { TargetMesh.EnableAttributes(); TargetMesh.Attributes()-\u003eCopyBoneAttributes(*SourceMesh.Attributes()); }\u003c/p\u003e\n\n\u003cp\u003e// Set the transfer method. TransferBoneWeights.TransferMethod = ETransferBoneWeightsMethod::...;\u003c/p\u003e\n\n\u003cp\u003e// if \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod::ClosestPointOnSurface\u003c/a\u003e is used and you simply want to copy weights over from the // closest points then set the radius and normal threshold to -1 (default). TransferBoneWeights.SearchRadius = -1 TransferBoneWeights.NormalThreshold = -1\u003c/p\u003e\n\n\u003cp\u003e// if \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod::InpaintWeights\u003c/a\u003e is used then additionally set the radius and normal parameters TransferBoneWeights.SearchRadius = ... // Good estimate is to use a small value (0.05) of the bounding box radius TransferBoneWeights.NormalThreshold = ... // 30 degrees (0.52 rad) works well in practice\u003c/p\u003e\n\n\u003cp\u003eif (TransferBoneWeights.Validate() == EOperationValidationResult::Ok) { TransferBoneWeights.TransferWeightsToMesh(TargetMesh, FSkeletalMeshAttributes::DefaultSkinWeightProfileName); }\u003c/p\u003e\n\n\u003cp\u003e// Alternatively if you don't want to use \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMesh3\"\u003eFDynamicMesh3\u003c/a\u003e to represent your target mesh you can transfer weights to // to each point separately by calling if (TransferBoneWeights.Validate() == EOperationValidationResult::Ok) { for each Point: FBoneWeights Weights; TransferBoneWeights.TransferWeightsToPoint(Weights, Point); }\u003c/p\u003e\n\n\u003cp\u003e// After the transfer you can check which target mesh vertices had the weight transferred directly from the source mesh // via the \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights\"\u003eFTransferBoneWeights\u003c/a\u003e:MatchedVertices array\u003c/p\u003e\n\n\u003ch2\u003eVariables\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/8adb859e-c6aa-4955-a67c-d20a84548e39/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/bIgnoreBoneAttributes\"\u003ebIgnoreBoneAttributes\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eCompletely ignore the source and target mesh bone attributes when transferring weights from one dynamic mesh to another.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/a46bcdb3-067c-480c-b804-4e7b1c4e8d08/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003ebUseIntrinsicLaplacian\u003c/td\u003e\n      \u003ctd\u003eIf true, will use the intrinsic Delaunay mesh to construct sparse Cotangent Laplacian matrix.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/25538bc7-551e-4ae9-b2cf-27ce8abf4a1f/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003ebUseParallel\u003c/td\u003e\n      \u003ctd\u003eEnable/disable multi-threading.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/e7ebf78b-52c6-4852-9b5e-948ae546ff3d/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/TraceLog/TArray\"\u003eTArray\u003c/a\u003e\u003c float \u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ForceInpaint\"\u003eForceInpaint\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eOptional mask where if ForceInpaint[VertexID] != 0 we want to force the weights for the vertex to be computed\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/d6319c54-d5c4-43ba-b72c-6e9d8d9460e5/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ForceInpaintWeightMapName\"\u003eForceInpaintWeightMapName\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eAlternatively, if the mask is stored as a target mesh weight map attribute, specify its name.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/225f1080-8d67-4233-b703-0b593b066efd/api_variable_protected.png\" alt=\"Protected variable\" loading=\"lazy\" title=\"Protected variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates/TUniquePtr\"\u003eTUniquePtr\u003c/a\u003e\u003c \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMeshAABBTree3\"\u003eFDynamicMeshAABBTree3\u003c/a\u003e \u003e\u003c/td\u003e\n      \u003ctd\u003eInternalSourceBVH\u003c/td\u003e\n      \u003ctd\u003eIf the caller doesn't pass BVH for the source mesh then we compute one.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/f286712c-b562-4312-b2a9-2dd5e94f1cbc/api_variable_protected.png\" alt=\"Protected variable\" loading=\"lazy\" title=\"Protected variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Templates/TUniquePtr\"\u003eTUniquePtr\u003c/a\u003e\u003c \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FMeshNormals\"\u003eFMeshNormals\u003c/a\u003e \u003e\u003c/td\u003e\n      \u003ctd\u003eInternalSourceMeshNormals\u003c/td\u003e\n      \u003ctd\u003eIf the source mesh doesn't have per-vertex normals then compute them\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/71ba2645-e532-4604-adf0-8c5e03b3fd55/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/LayeredMeshSupport\"\u003eLayeredMeshSupport\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eIf true, when the closest point doesn't pass the normal threshold test, will try again with a flipped normal.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/d21c126b-ef4f-4302-b6dd-e1473abbc336/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/TraceLog/TArray\"\u003eTArray\u003c/a\u003e\u003c bool \u003e\u003c/td\u003e\n      \u003ctd\u003eMatchedVertices\u003c/td\u003e\n      \u003ctd\u003eOutputs MatchedVertices[VertexID] is set to true for a target mesh vertex ID with a match found, false otherwise.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/bb9cec96-abe5-4994-a705-94f42f8ccdeb/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/int32\"\u003eint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/MaxNumInfluences\"\u003eMaxNumInfluences\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eDuring the transfer, only use this number of influences per vertex.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/fb929c67-ed25-414b-8ccc-383596dd6924/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003edouble\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/NormalThreshold\"\u003eNormalThreshold\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eMaximum angle (in radians) difference between target and source point normals to be considred a match.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/e0998c65-4164-4b55-9ff4-238ccef04c17/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/int32\"\u003eint32\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eNumSmoothingIterations\u003c/td\u003e\n      \u003ctd\u003eThe number of optional post-processing smoothing iterations applied to the vertices without the match.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/11018ed7-2d3a-45b5-b2a5-f8d033faf05d/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/Util/FProgressCancel\"\u003eFProgressCancel\u003c/a\u003e *\u003c/td\u003e\n      \u003ctd\u003eProgress\u003c/td\u003e\n      \u003ctd\u003eOptional Inputs Set this to be able to cancel the running operation.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/1bd09bba-0177-4a24-bdca-9866688a97d1/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003edouble\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/SearchRadius\"\u003eSearchRadius\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eOptional Inputs for \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod::InpaintWeights\u003c/a\u003e method Radius for searching the closest point.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/7166791e-b375-439a-be83-2c00be799185/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003efloat\u003c/td\u003e\n      \u003ctd\u003eSmoothingStrength\u003c/td\u003e\n      \u003ctd\u003eThe strength of each post-processing smoothing iteration.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/462a7b9c-3499-4a5a-8270-b26d4164c74c/api_variable_protected.png\" alt=\"Protected variable\" loading=\"lazy\" title=\"Protected variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003econst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMeshAABBTree3\"\u003eFDynamicMeshAABBTree3\u003c/a\u003e *\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/SourceBVH\"\u003eSourceBVH\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eThe caller can optionally specify the source mesh BVH in case this operator is run on multiple target meshes while the source mesh remains the same.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/338661f8-f619-41e6-a00e-d4b59ae5c409/api_variable_protected.png\" alt=\"Protected variable\" loading=\"lazy\" title=\"Protected variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003econst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMesh3\"\u003eFDynamicMesh3\u003c/a\u003e *\u003c/td\u003e\n      \u003ctd\u003eSourceMesh\u003c/td\u003e\n      \u003ctd\u003eSource mesh we are transfering weights from.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/e21e88b5-ac29-448c-9ada-aa17cbc67512/api_variable_protected.png\" alt=\"Protected variable\" loading=\"lazy\" title=\"Protected variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eSourceProfileName\u003c/td\u003e\n      \u003ctd\u003eThe name of the source mesh skinning profile name.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/3814e546-8f13-467f-b709-816b61be4b07/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/FTransformSRT3d\"\u003eFTransformSRT3d\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eTargetToWorld\u003c/td\u003e\n      \u003ctd\u003eTransform applied to the input target mesh or target point before transfer.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/c21930b7-1eed-4847-b58f-b0d1cf6cd886/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/TraceLog/TArray\"\u003eTArray\u003c/a\u003e\u003c \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/int32\"\u003eint32\u003c/a\u003e \u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/TargetVerticesSubset\"\u003eTargetVerticesSubset\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eOptional subset of target mesh vertices to transfer weights to.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/ecd37bb2-f71f-4aac-aa8c-4ef67ed9c9dc/api_variable_public.png\" alt=\"Public variable\" loading=\"lazy\" title=\"Public variable\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003eTransferMethod\u003c/td\u003e\n      \u003ctd\u003eThe transfer method to compute the bone weights.\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eConstructors\u003c/h2\u003e\n\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/9dad9e48-99f6-489a-a3a2-5e95739f1369/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/__ctor\"\u003eFTransferBoneWeights\u003c/a\u003e\n (\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMesh3\"\u003eFDynamicMesh3\u003c/a\u003e* InSourceMesh,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e\u0026 InSourceProfileName,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMeshAABBTree3\"\u003eFDynamicMeshAABBTree3\u003c/a\u003e* SourceBVH\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eAssumes that the InSourceMesh has bone attributes, use bIgnoreBoneAttributes flag to ignore the bone attributes and skip re-indexing.\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eDestructors\u003c/h2\u003e\n\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/b7fe48e6-5474-450e-937e-29b80db9ceb0/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e \u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/9d14b355-6835-4a29-9f05-6bcbf814d3bf/api_function_virtual.png\" alt=\"Virtual\" loading=\"lazy\" title=\"Virtual\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/__dtor\"\u003e~FTransferBoneWeights\u003c/a\u003e ()\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eFunctions\u003c/h2\u003e\n\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/8bb035ed-0235-44db-b89a-68fb92c4d644/api_function_protected.png\" alt=\"Protected function\" loading=\"lazy\" title=\"Protected function\" convert=\"false\" width=\"18\" /\u003e \u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/dd223ebe-9b97-4686-b19e-17a3f379e8ae/api_function_virtual.png\" alt=\"Virtual\" loading=\"lazy\" title=\"Virtual\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/Cancelled\"\u003eCancelled\u003c/a\u003e ()\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/da38ed21-1d5a-4ef5-84f3-be6aa93a8e65/api_function_protected.png\" alt=\"Protected function\" loading=\"lazy\" title=\"Protected function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/FindClosestPoint-\"\u003eFindClosestPointOnSourceSurface\u003c/a\u003e\n (\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/FVector3d\"\u003eFVector3d\u003c/a\u003e\u0026 InPoint,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/FTransformSRT3d\"\u003eFTransformSRT3d\u003c/a\u003e\u0026 InToWorld,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/int32\"\u003eint32\u003c/a\u003e\u0026 OutTriID,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/FVector3d\"\u003eFVector3d\u003c/a\u003e\u0026 OutBary\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eFind the closest point on the surface of the source mesh and return the ID of the triangle containing it and its barycentric coordinates.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/a841fd77-cf29-44a7-aaf9-9ccf9e3a82bf/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e \u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/8cd9f405-fa04-42d1-b702-872693ae0536/api_function_virtual.png\" alt=\"Virtual\" loading=\"lazy\" title=\"Virtual\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/TransferWeightsToMesh\"\u003eTransferWeightsToMesh\u003c/a\u003e\n (\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/DynamicMesh/FDynamicMesh3\"\u003eFDynamicMesh3\u003c/a\u003e\u0026 InOutTargetMesh,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e\u0026 InTargetProfileName\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eTransfer the bone weights from the source mesh to the given target mesh and store the result in the skin weight\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/11fc1d8f-c8d6-4804-880a-efe23e0c0cef/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e \u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/3cf87518-ce4a-447e-9789-9232cdcfafa6/api_function_virtual.png\" alt=\"Virtual\" loading=\"lazy\" title=\"Virtual\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/TransferWeightsToPoint/1\"\u003eTransferWeightsToPoint\u003c/a\u003e\n (\nUE::AnimationCore::FBoneWeights\u0026 OutWeights,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/FVector3d\"\u003eFVector3d\u003c/a\u003e\u0026 InPoint,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Containers/TMap\"\u003eTMap\u003c/a\u003e\u003c \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e, \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint16\"\u003euint16\u003c/a\u003e \u003e* TargetBoneToIndex,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/FVector3f\"\u003eFVector3f\u003c/a\u003e\u0026 InNormal\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eCompute the bone weights for a given point using the \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod::ClosestPointOnSurface\u003c/a\u003e algorithm.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/f5a6b9bb-1f24-4c9e-92c0-ff298e5f42d1/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003ebool\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/TransferWeightsToPoint/2\"\u003eTransferWeightsToPoint\u003c/a\u003e\n (\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/TraceLog/TArray\"\u003eTArray\u003c/a\u003e\u003c BoneIndexType \u003e\u0026 OutBones,\u003cbr\u003e\n\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/TraceLog/TArray\"\u003eTArray\u003c/a\u003e\u003c BoneFloatWeightType \u003e\u0026 OutWeights,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/TVector\"\u003eUE::Math::TVector\u003c/a\u003e\u003c PosVectorType \u003e\u0026 InPoint,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Containers/TMap\"\u003eTMap\u003c/a\u003e\u003c \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/UObject/FName\"\u003eFName\u003c/a\u003e, \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/HAL/uint16\"\u003euint16\u003c/a\u003e \u003e* TargetBoneToIndex,\u003cbr\u003e\nconst \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/Core/Math/TVector\"\u003eUE::Math::TVector\u003c/a\u003e\u003c NormalVectorType \u003e\u0026 InNormal\u003cbr\u003e\n )\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003eCompute the bone weights for a given point using the \u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod::ClosestPointOnSurface\u003c/a\u003e algorithm.\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/6cc6128d-fb5e-46e2-93b6-31f7ca1562be/api_function_public.png\" alt=\"Public function\" loading=\"lazy\" title=\"Public function\" convert=\"false\" width=\"18\" /\u003e \u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/78ffde17-4916-4741-9d05-6be463a6fb78/api_function_virtual.png\" alt=\"Virtual\" loading=\"lazy\" title=\"Virtual\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/GeometryCore/UE__Geometry__EOperationValidati-\"\u003eEOperationValidationResult\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/Validate\"\u003eValidate\u003c/a\u003e ()\u003c/p\u003e\n\u003c/div\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eEnums\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e \u003c/th\u003e\n      \u003cth\u003eType\u003c/th\u003e\n      \u003cth\u003eName\u003c/th\u003e\n      \u003cth\u003eDescription\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003e\u003cimg src=\"https://d1iv7db44yhgxn.cloudfront.net/documentation/images/856c33f9-1503-410b-8be5-4102d4a63cd6/api_enum_public.png\" alt=\"Public enum\" loading=\"lazy\" title=\"Public enum\" convert=\"false\" width=\"18\" /\u003e\u003c/td\u003e\n      \u003ctd\u003e\u003ca href=\"https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Plugins/DynamicMesh/Operations/FTransferBoneWeights/ETransferBoneWei-\"\u003eETransferBoneWeightsMethod\u003c/a\u003e\u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n      \u003ctd\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n",
      "settings": {
        "is_hidden": false
      },
      "type": "markdown"
    }
  ],
  "description": "Transfer bone weights from one mesh (source) to another (target).",
  "document_type": null,
  "hash_id": "4myNx",
  "id": 3369255,
  "locale": "en-us",
  "prereq_documents": [],
  "readiness": "production",
  "related_documents": [],
  "revision_hash_id": "Wgd8G",
  "seo_description": null,
  "seo_slug": null,
  "seo_title": null,
  "slug": "API/Plugins/DynamicMesh/Operations/FTransferBoneWeights",
  "source": "ue_cpp_api_external",
  "tags": [],
  "title": "FTransferBoneWeights",
  "updated_at": "2024-11-13T04:41:04.844+00:00",
  "views_count": 0
}